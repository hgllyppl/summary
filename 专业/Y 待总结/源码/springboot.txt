
# springboot(初始化/架构)
boot-start
LaunchedURLClassLoader -> load all jar -> exec main

SpringApplication.run
SpringApplicationRunListeners
listeners.starting/environmentPrepared/contextPrepared/contextLoaded/finished

super.refresh ->  ...
              ->  invokeBeanFactoryPostProcessors -> AutoConfigurationImportSelector -> import AutoConfigurationClass
              ->  ...
              ->  super.onRefresh
                    -> getEmbeddedServletContainerFactory
                    -> getEmbeddedServletContainer
                        -> tomcat.start()[Main] -> server.start() -> services[i].start() -> engine.start() -> host.start()[TomcatThread] -> context.start() [LocalhostThread]
                            -> selfInitialize
                                -> prepareEmbeddedWebApplicationContext
                                    -> servletContext.setAttribute("org.springframework.web.context.WebApplicationContext.ROOT", ctx)
                                    -> ctx.setServletContext
                                -> WebApplicationContextUtils.registerWebApplicationScopes
                                    -> beanFactory.registerScope(WebApplicationContext.SCOPE_REQUEST/SCOPE_SESSION/SCOPE_GLOBAL_SESSION/SCOPE_APPLICATION, new RequestScope())
                                -> WebApplicationContextUtils.registerEnvironmentBeans
                                    -> INN servletContext THEN beanFactory.registerSingleton("servletContext", servletContext)
                                    -> INN servletConfig THEN beanFactory.registerSingleton("servletConfig", servletConfig)
                                    -> INE contextParameters THEN beanFactory.registerSingleton("contextParameters", parameterMap)
                                    -> INE contextAttributes THEN beanFactory.registerSingleton("contextAttributes", attributeMap)
                                -> new ServletContextInitializerBeans extends AbstractCollection<ServletContextInitializer>
                                    -> getBean(ServletContextInitializer/Servlet/Filter/EventListener.class)[会过滤已经注册的bean]
                                    -> addBean 2 list
                                -> ITER ServletContextInitializerBeans
                                    -> ServletContextInitializer.onStartup
                                        -> ServletRegistrationBean
                                            -> servletContext.addServlet & configure
                                        -> FilterRegistrationBean
                                            -> servletContext.addFilter & configure
                                        -> ServletListenerRegistrationBean
                                            -> servletContext.addListener
              ->  ...
              ->  super.finishRefresh
                    -> startEmbeddedServletContainer -> localContainer.start() -> addPreviouslyRemovedConnectors(bind socket)

boot-autoconfigure
autoconfigure -> ConditionalOn & ConditionalOnMissing & more 决定启用自动配置，大部分配置是你不配它就配，你配了它就不配，例 TransactionAutoConfiguration
